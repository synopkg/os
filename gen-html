#!/usr/bin/python3

import datetime

from dmt.DB import MirrorCheckResult, GlobalInfo
from dmt.BasePageGenerator import BasePageGenerator

class StatusGenerator(BasePageGenerator):
    def __init__(self, args):
        super().__init__(args)

    def run(self):
        now = datetime.datetime.now()

        globalinfo = self.session.query(GlobalInfo).first()
        results = self.session.query(MirrorCheckResult).order_by(MirrorCheckResult.site).all()
        results = [ x.__dict__ for x in results]
        for x in results:
            if x['trace_master_timestamp'] is not None:
                t1 = x['trace_master_timestamp']
                t2 = x['last_test']
                x['agegroup'] = self._get_agegroup(t2 - t1)
            if x['site'] in self.mirrors.mirrors:
                x['mirror'] = self.mirrors.mirrors[x['site']]
                x['trace_url'] = x['mirror'].get_tracedir('Archive', 'http')

        context = {
            'mirrors': results,
            'globalinfo':globalinfo,
            'now': now
        }
        template = self.tmplenv.get_template('mirror-status.html')
        template.stream(context).dump(self.args.outfile, errors='strict')


OUTFILE='mirror-status.html'

if __name__ == "__main__":
    parser = StatusGenerator.make_argument_parser(outfile = OUTFILE)
    args = parser.parse_args()
    StatusGenerator(args).run()
